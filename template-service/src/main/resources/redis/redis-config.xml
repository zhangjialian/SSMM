<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <!-- 加载*.properties属性文件 -->
    <context:property-placeholder ignore-unresolvable="true"
                                  location="classpath:redis/redis-config.properties" />

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="minIdle" value="${redis.minIdle}" />
        <property name="maxTotal" value="${redis.maxmaxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <!-- 获得一个jedis实例的时候是否通过 ping() 检查连接可用性 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <!-- return 一个jedis实例给pool时，是否通过 ping() 检查连接可用性 -->
        <property name="testOnReturn" value="true" />
        <!-- idle状态监测用异步线程evict进行检查 -->
        <property name="testWhileIdle" value="true" />
        <!-- 一次最多evict的pool里的jedis实例个数 -->
        <property name="numTestsPerEvictionRun" value="100" />
        <!-- test idle 线程的时间间隔 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}" p:port="${redis.port}" p:poolConfig-ref="poolConfig" />
    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer" ref="stringSerializer" />
        <!-- 开启事务，可以通过transcational注解控制 -->
        <property name="enableTransactionSupport" value="true" />
    </bean>

</beans>